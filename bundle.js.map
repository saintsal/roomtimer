{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/Burger.svelte","../src/Menu.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","<script>\n  export let isactive=true;\n</script>\n\n<style>\n  .navbar-burger {\n    color: #4a4a4a;\n    cursor: pointer;\n    display: block;\n    height: 3.25rem;\n    position: relative;\n    width: 3.25rem;\n    margin-left: auto;\n  }\n\n  .navbar-burger span {\n    background-color: currentColor;\n    display: block;\n    height: 1px;\n    left: calc(50% - 8px);\n    position: absolute;\n    transform-origin: center;\n    transition-duration: 86ms;\n    transition-property: background-color, opacity, transform;\n    transition-timing-function: ease-out;\n    width: 16px;\n  }\n\n  .navbar-burger span:nth-child(1) {\n    top: calc(50% - 6px);\n  }\n\n  .navbar-burger span:nth-child(2) {\n    top: calc(50% - 1px);\n  }\n\n  .navbar-burger span:nth-child(3) {\n    top: calc(50% + 4px);\n  }\n\n  .navbar-burger:hover {\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n\n  .navbar-burger.is-active span:nth-child(1) {\n    transform: translateY(5px) rotate(45deg);\n  }\n\n  .navbar-burger.is-active span:nth-child(2) {\n    opacity: 0;\n  }\n\n  .navbar-burger.is-active span:nth-child(3) {\n    transform: translateY(-5px) rotate(-45deg);\n  }\n\n</style>\n\n<a role=\"button\" class=\"navbar-burger\" class:is-active={isactive} on:click=\"{() => isactive = !isactive}\" aria-label=\"menu\" aria-expanded=\"false\">\n  <span aria-hidden=\"true\"></span>\n  <span aria-hidden=\"true\"></span>\n  <span aria-hidden=\"true\"></span>\n</a>\n","<script>\n  import { createEventDispatcher, onMount } from 'svelte';\n  import Burger from './Burger.svelte';\n\n  const dispatch = createEventDispatcher();\n\n\n  let timeInput;\n  export let isopen = true;\n  export let time;\n\n  function handleKeydown(event) {\n    let key = event.key;\n    let keyCode = event.keyCode;\n    \n    //Esc\n    if (keyCode == 27) {\n      isopen = !isopen; \n    }\n\n  }\n\n  $: { dispatch('message', { open: isopen }); }\n\n</script>\n\n\n<style>\n  aside.menu {\n    padding: 2em;\n    background: #fafafa;\n    position: relative;\n    right: -120%;\n    transition: right 0.4s linear;\n    overflow: hidden;\n    height: 70%;\n  }\t\n  aside.show{\n    right: 0;\n  }\n  aside.menu ul {\n    font-size: 80%;\n  }\n\n</style>\n\n<svelte:window on:keydown={handleKeydown}/>\n\n<svelte:head>\n</svelte:head>\n\n<Burger bind:isactive={isopen} />\n\n<aside class=\"menu\" class:show={isopen}>\n  <slot>\n  </slot>\n</aside>\n","<script>\n  import { onDestroy, onMount } from 'svelte';\n  import Menu from './Menu.svelte';\n\n  //Interface\n  let\n    timeRequest = decodeURI(window.location.pathname.slice(1)),\n    menuOpen = timeRequest.length>0 ? false : true,\n    timeInput,\n    isMuted = false,\n    isFS = timeRequest.length>0 ? true: false,\n    mode=0;\n \n  let modes= [\n    {sound: \"bell.mp3\", cssclass:\"normal\" },\n    {sound: \"alright.mp3\", cssclass:\"mm\" } //Mathew!\n  ];\n\n  //Timer function\n  let \n    startTS = window.performance.now(),\n    //last_time = window.performance.now(),\n    frame,\n    elapsed = 0,\n    timeLeft = 0,\n    duration = 0,\n    elapsedSaved = 0,\n    running = timeRequest.length>0 ? true: false,\n    bellPoints = new Array(),\n    timers = [{time:0, label: \"0:00\"}],\n    timerMarker = 0;\n\n  //Display\n  let\n    percentage = 0,\n    curLabel = \"\",\n    isFinal = false,\n    isMMmode = false,\n    bar,\n    app;\n\n\n  $: curLeft = curDuration-curElapsed;\n  $: curElapsed = elapsed-prevTimers;\n  $: isFinal = running && (timeLeft < Math.min(duration/5, 60000));\n  $: endTS = startTS + duration * 1000;\n  $: percentage  = Math.min(100,(Number(duration-timeLeft)/ Number(duration)*100).toFixed(2));\n  $: curPercentage = timeLeft > 0 ? Math.min(100,(Number(duration-timeLeft-prevTimers)/ curDuration*100).toFixed(2)): 100;\n  $: upcomingBell = bellPoints[timerMarker];\n  $: { parseTimeRequest(); timeRequest; }\n  $: curDuration = (typeof timers[timerMarker] !== 'undefined') ? timers[timerMarker].time : duration;\n  $: prevTimers = (typeof bellPoints[timerMarker-1] !== 'undefined')?  bellPoints[timerMarker-1]: 0;\n  $: displayedMessage = curLabel ? curLabel : MStoClock(curLeft);\n\n  onMount(async () => {\n    parseTimeRequest();\n    startTicker();\n    if (menuOpen) timeInput.focus();\n  });\n  \n  function ticker() {\n    frame = requestAnimationFrame(ticker);\n\n    if (running) {\n      //Increment elapsed\n      const time = window.performance.now();\n      elapsed = time - startTS;\n\n      //Using a Svelte declaration ($: ) doesn't update fast enough so we update timestamp-based vars here\n      timeLeft = duration - elapsed;\n      curLabel = timers[timerMarker].label;\n\n      //Next timer\n      if (elapsed > upcomingBell) {\n\tplayBell();\n\ttimerMarker++;\n      }\n    \n      //End the timer\n      if (timeLeft < 0) {\n\trunning = false;\n\tisFinal = false;\n\tcurLabel = \"Done!\";\n\tplayBell();\n\t//parseTimeRequest(); //Reset the timers array to avoid errors and setup space to restart the same timer\n      }\n    }\n  }\n\n  /* Behaviour */\n  function startTicker() {\n    startTS = window.performance.now();\n    ticker();\n\n    onDestroy(() => {\n      cancelAnimationFrame(frame);\n    });\n\n  }\n\n  function restart() {\n    parseTimeRequest();\n    startTS = window.performance.now();\n    elapsed = 0;\n    isFinal = false;\n    running = true;\n  }\n\n  function parseTimeRequest() {\n\n    var totaltime = 0;\n\n    //clear\n    timers = [{time:0, label: \"0:00\"}],\n    bellPoints = new Array ();\n    timerMarker = 0;\n\n    if (timeRequest) {\n      var p = timeRequest.split('/');\n      if (timeRequest.includes(\"/\")) {\n\tfor (var i = 0; i < p.length; i++) {\n\t  timers[i] = {\n\t    time: convertClockToSeconds(p[i]),\n\t    label:  convertClockToLabel(p[i])\n\t  }\n\t  totaltime += timers[i].time;\n\t  bellPoints[i] = totaltime ;\n\t}\n\n      } else {\n\ttimers[0] = {\n\t  time: convertClockToSeconds(timeRequest),\n\t  label: convertClockToLabel(timeRequest)\n\t}\n\ttotaltime = timers[0].time;\n      }\n\t\n      duration = totaltime;\n      timeLeft = totaltime;\n\n    }\n  }\n\n  function handleMenu(event) {\n    switch (event.detail.open) {\n      case true:\n\ttimeInput.focus()\n\ttimeInput.select();\n\tbreak;\n      case false:\n\ttimeInput.blur(); //Don't want to have the user typing into the input if they can't see it\n\tbreak;\n    }\n  }\n\n  function handleInputKey(event) {\n    let key = event.key;\n    let keyCode = event.keyCode;\n  \n    switch (keyCode) {\n      case 13: //Enter\n\trestart();\n\tmenuOpen = false;\n\tbreak;\n    }\n  }\n\n  function fullscreen() {\n    isFS = !isFS;\n    if (isFS) {\n      app.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n  }\n\n  function mute() {\n    isMuted = !isMuted;\n  }\n\n  function beastmode() {\n    mode = (mode + 1) % modes.length;\n    for (var m of modes) {\n      bar.classList.remove(m.cssclass);\n    }\n    bar.classList.add(modes[mode].cssclass);\n  }\n\n  function pause() {\n    if (timeLeft > 0) {\n      if (running) {\n\telapsedSaved = elapsed;\n      } else {\n\tstartTS = window.performance.now() - elapsedSaved;\n\telapsedSaved = 0;\n      }\n      running = !running;\n    } else {\n      restart();\n    }\n  }\n\n  function moreTime(seconds) {\n    const ms = seconds*1000;\n    if (running) {\n      duration += ms;\n      timers.forEach(function(obj, index) {\n\tif (index >= timerMarker) {\n\t  timers[index].time += ms;\n\t  bellPoints[index] += ms;\n\t}\n      });\n    }\n  }\n\n  function handleKeydown(event) {\n    let key = event.key;\n    let keyCode = event.keyCode;\n\n    switch (keyCode) {\n      case 32: //Space\n\tpause();\n        break;\n      case 82: //R\n\trestart();\n        break;\n      case 77: //M\n\tmute();\n        break; \n      case 70: //F\n\tfullscreen();\n        break; \n      case 66: //B\n\tbeastmode();\n        break; \n      case 84: //t\n\tmoreTime(10);\n        break; \n      case 49: //1\n\tmoreTime(60);\n        break; \n      case 50: //2\n\tmoreTime(120);\n        break;\n      case 51: //3\n\tmoreTime(180);\n        break;\n      case 52: //4\n\tmoreTime(240);\n        break;\n      case 53: //5\n\tmoreTime(300);\n        break;\n      case 54: //6\n\tmoreTime(360);\n        break;\n      case 55: //7\n\tmoreTime(420);\n        break;\n      case 56: //8\n\tmoreTime(480);\n        break;\n      case 57: //9\n\tmoreTime(520);\n        break;\n      case 58: //0\n\tmoreTime(600);\n        break;\n    }\n  }\n\n  function playBell() {\n    if (!isMuted) {\n      var bell = new Audio(\"/sounds/\"+modes[mode].sound);\n      bell.play();\n    }\n  }\n\n  /* Derived values */\n   \n    function convertClockToLabel(clock) {\n      if (!clock) return false; \n\n      if(clock = clock.match(/\\(([^)]+)\\)/)) {\n        return clock[1];\n      } else {\n        return \"\";\n      }\n    }\n\n    function convertClockToSeconds(clock) {\n      if (!clock) return false; \n\n      //Strip labels\n      clock = clock.replace(/\\(([^)]+)\\)/gi, '');\n      //Strip illegal chars\n      clock = clock.replace(/[^[0-9:]/gi, '');\n\n      var p, s, m;\n\n      if (clock.includes(\":\")) {\n        p = clock.split(':'), s = 0, m = 1;\n        while (p.length > 0) {\n          s += Number(m) * parseInt(Number(p.pop()), 10);\n          m *= 60;\n        }\n      } else {\n        s = Number(clock);\n      }\n\n      return s*1000;\n    }\n\n  \n\n  function MStoClock(value) {\n      value /= 1000;\n\n      // timeleft rounds down, so add a second to the way it's displayed\n      value += 1;\n\n      var sec_num = parseInt(value, 10); // don't forget the second param\n      var hours   = Math.floor(sec_num / 3600);\n      var minutes = Math.floor((sec_num - (hours * 3600)) / 60);\n      var seconds = sec_num - (hours * 3600) - (minutes * 60);\n      var ret;\n\n      if ((minutes < 10 && hours > 0)) {minutes = \"0\"+minutes;}\n      if (seconds < 10) {seconds = \"0\"+seconds;}\n\n      ret = seconds;\n      ret = minutes+ ':' + ret;\n      if (hours > 0 ) ret = hours + ':' + ret;\n      \n      return ret;\n  }\n\n\n\n</script>\n\n\n<style>\n  :global(body) { position: fixed; padding: 0;}\n  :-webkit-full-screen { background: #fff; }\n  :-moz-full-screen { background: #fff; }\n  :-ms-full-screen { background: #fff; }\n  #bottomcontrols { position: fixed; right: 10px; bottom: 10px; z-index: 20}\n  #controls { position: absolute; right: 10px; top: 6%; }\n  .bellline { position: absolute; top: 0; height: 4%; float: left; border-right: 0.5rem solid #999; z-index:20;}\n  #prg { position: absolute; width: 100%; height: 100%; }\n  #timer{position: absolute; width: 100%; height: 100%; font-size: 18vw; text-align: center; vertical-align: middle; mix-blend-mode: multiply; font-family: \"PT Mono\", monospace; }\n  #timer span {position: fixed; left: 0; top: 50%; width: 100%; transform: translateY(-50%); font-color: #999;}\n  #timer span.label { font-family: \"Oxygen\"; }\n  #footer {position: absolute; bottom: 10px; left: 10px; right: 10px; height: 4vh; font-size: 3vh; text-align: center; mix-blend-mode: multiply; }\n  #footer .logo {mix-blend-mode: overlay; }\n  #bar { height: 100%; float: left; background: #18c953;  -webkit-transition: 0.1s linear ; -moz-transition: 0.1s linear; -o-transition: 0.1s linear ; transition: 0.1s linear;  }\n  #totalbar { position: absolute; height: 4%; float: left; background: #000;  -webkit-transition: 0.1s linear ; -moz-transition: 0.1s linear; -o-transition: 0.1s linear ; transition: 0.1s linear;  }\n  .final #bar {    animation-duration: 500ms; animation-name: blink; animation-iteration-count: infinite; animation-direction: alternate;}\n  :global(#bar.mm) { background-image: url(/images/mm.gif); background-size: cover; background-position-y: 30%; opacity: 0.7;}\n  #help { margin: 40px 30px;}\n  .logo {height: 4vh;}\n  form {margin: .5rem; text-align: center;}\n  #controls img, #fullscreen img { width: 1rem; min-width: 50px; min-height: 50px; height: 1rem; padding: 4px; }\n  .timeleft {  -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; }\n  @media all and (max-height: 250px) {\n    #timer{font-size: 80vh; }\n  }\n  @media all and (max-height: 500px) {\n    #bottomcontrols img, #controls img { width: 2rem; min-width: 30px; min-height: 30px; height: 2rem; padding: 4px; }\n  }\n  @keyframes blink { from { opacity: 1; } to { opacity: 0.3; } }\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\n.menu {\n  font-size: 1rem;\n}\n\n.menu-list {\n  line-height: 1.25;\n}\n\n.menu-list a {\n  border-radius: 2px;\n  color: #4a4a4a;\n  display: block;\n  padding: 0.5em 0.75em;\n}\n\n.menu-list a:hover {\n  background-color: whitesmoke;\n  color: #363636;\n}\n\n.menu-list a.is-active {\n  background-color: #3273dc;\n  color: #fff;\n}\n\n.menu-list li ul {\n  border-left: 1px solid #dbdbdb;\n  margin: 0.75em;\n  padding-left: 0.75em;\n}\n\n.menu-label {\n  color: #7a7a7a;\n  font-size: 0.75em;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n}\n\n.menu-label:not(:first-child) {\n  margin-top: 1em;\n}\n\n.menu-label:not(:last-child) {\n  margin-bottom: 1em;\n}\n\n</style>\n\n\n\n<svelte:head>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n  <!--Import Google Icon Font-->\n  <!-- <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\"> -->\n  <title>{displayedMessage}</title>\n</svelte:head>\n\n<svelte:window on:keydown={handleKeydown}/>\n\n<div id=\"app\" allowfullscreen=true bind:this={app} class:final={isFinal} >\n  {#each bellPoints as line}\n    <div class=\"bellline\" style=\"width: {line/duration*100}%\"></div>\n  {/each}\n  <div id=\"prg\">\n    <div id=\"bar\" bind:this={bar} style=\" width: { curPercentage + '%' }\"></div>\n    <div id=\"totalbar\" style=\" width:{ percentage + '%' }\"></div>\n  </div>\n  <div id=\"timer\" on:click={pause}>\n    <span class=\"timeleft\">{displayedMessage}</span>\n  </div>\n  <div id=\"controls\">\n      <Menu on:message={handleMenu} bind:isopen={menuOpen} bind:time={timeRequest}>\n\t<p class=\"menu-label\">\n\t  Set time\n\t</p>\n\t<ul class=\"menu-list\">\n\t  <li>\n\t    <input placeholder=\"Type seconds or HH:MM:SS\" autocomplete=\"off\" on:keydown={handleInputKey} bind:value={timeRequest} bind:this={timeInput} />\n\t  </li>\n\t</ul>\n       <p class=\"menu-label\">\n\t  Sequential timers\n\t</p>\n\t<ul class=\"menu-list\">\n\t  <li><strong>/</strong> between timers.  Try <strong>3/8/2:30</strong> </li>\n\t</ul>\n\t<p class=\"menu-label\">\n\t  Add Instructions\n\t</p>\n\t<ul class=\"menu-list\">\n\t  <li><strong>()</strong> after each time. eg.<br><strong>2(Ready)/3(Set)/2:30(Dance!)</strong>.</li>\n\n\t</ul>\n\t<p class=\"menu-label\">\n\t  Autostart\n\t</p>\n\t<ul class=\"menu-list\">\n\t  <li>Add the timer to the address.<br>eg. <strong>sourcetimer.com/3:00</strong></li>    \n\t  <li>(Great to link from your slides!)</li>\n\t</ul>\n\t<p class=\"menu-label\">\n\t  Control Keys\n\t</p>\n\t<ul class=\"menu-list\">\n\t  <li><strong>Esc</strong> opens this menu</li>\n\t  <li><strong>Space</strong> pauses</li>\n\t  <li><strong>R</strong> restarts </li>\n\t  <li><strong>F</strong> toggles fullscreen</li>\n\t  <li><strong>M</strong> toggles Matthew McConaughey</li>\n\t  <li><strong>1-9</strong> adds bonus time (in minutes)\n\t  <li><strong>0</strong> adds 10 minutes\n\t  <li><strong>T</strong> adds 10 seconds\n\t</ul>\n      </Menu>\n  </div>\n  <div id=\"footer\">\n    Made by <a href=\"http://source.institute\"><img alt=\"Source\" src=\"/images/logo.png\" class=\"logo\"></a>\n  </div>\n\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\t\tname: \"Source Timer\"\n\t}\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","flush","seen_callbacks","Set","length","shift","update","pop","i","callback","has","add","fragment","dirty","before_update","p","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","globals","window","global","bind","props","indexOf","bound","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","context","Map","ready","ret","hydrate","l","Array","from","childNodes","intro","SvelteComponent","[object Object]","this","$destroy","index","splice","isactive","isopen","slot_ctx","handleKeydown","changed","dispatch","time","open","keyCode","line","duration","handleInputKey","timeRequest","displayedMessage","bellPoints","menuOpen","handleMenu","curPercentage","percentage","isFinal","pause","iterations","convertClockToLabel","clock","match","convertClockToSeconds","s","replace","includes","split","Number","parseInt","timeInput","frame","bar","app","decodeURI","location","pathname","isMuted","isFS","mode","modes","sound","cssclass","startTS","performance","now","elapsed","timeLeft","elapsedSaved","running","timers","label","timerMarker","curLabel","ticker","requestAnimationFrame","upcomingBell","playBell","restart","parseTimeRequest","totaltime","moreTime","seconds","ms","obj","Audio","play","async","cancelAnimationFrame","startTicker","focus","curDuration","prevTimers","curElapsed","curLeft","Math","min","toFixed","sec_num","hours","floor","minutes","MStoClock","select","blur","requestFullscreen","exitFullscreen","remove","beastmode","body"],"mappings":"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"}